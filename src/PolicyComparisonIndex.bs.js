// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactModal = require("react-modal");
var Schema$OurPolitics = require("./schema.bs.js");
var Content$OurPolitics = require("./Content.bs.js");
var PolicyModal$OurPolitics = require("./PolicyModal.bs.js");
var PolicyTable$OurPolitics = require("./PolicyTable.bs.js");
var PolicyModalDispatch$OurPolitics = require("./PolicyModalDispatch.bs.js");

var map = Curry._3(Schema$OurPolitics.TopicMap[/* add */3], /* ForeignPolicy */1, /* array */[
      /* record */[
        /* topic : ForeignPolicy */1,
        /* title : record */[
          /* en */"Foo",
          /* fr */"?"
        ],
        /* summary : record */[
          /* en */"NDP policy",
          /* fr */"?"
        ],
        /* party : NDP */2,
        /* references : array */[],
        /* details */Content$OurPolitics.test
      ],
      /* record */[
        /* topic : ForeignPolicy */1,
        /* title : record */[
          /* en */"Foo",
          /* fr */"?"
        ],
        /* summary : record */[
          /* en */"Liberal policy",
          /* fr */"?"
        ],
        /* party : Liberal */0,
        /* references : array */[],
        /* details */Content$OurPolitics.test
      ]
    ], Curry._3(Schema$OurPolitics.TopicMap[/* add */3], /* Families */0, /* array */[
          /* record */[
            /* topic : Families */0,
            /* title : record */[
              /* en */"Foo",
              /* fr */"?"
            ],
            /* summary : record */[
              /* en */"NDP policy",
              /* fr */"?"
            ],
            /* party : NDP */2,
            /* references : array */[],
            /* details */Content$OurPolitics.test
          ],
          /* record */[
            /* topic : Families */0,
            /* title : record */[
              /* en */"Bar",
              /* fr */"Barey"
            ],
            /* summary : record */[
              /* en */"NDP policy",
              /* fr */"?"
            ],
            /* party : NDP */2,
            /* references : array */[],
            /* details */Content$OurPolitics.test
          ],
          /* record */[
            /* topic : Families */0,
            /* title : record */[
              /* en */"Foo",
              /* fr */"?"
            ],
            /* summary : record */[
              /* en */"Conservative policy",
              /* fr */"?"
            ],
            /* party : Conservative */1,
            /* references : array */[],
            /* details */Content$OurPolitics.test
          ],
          /* record */[
            /* topic : Families */0,
            /* title : record */[
              /* en */"Foo",
              /* fr */"?"
            ],
            /* summary : record */[
              /* en */"Liberal policy",
              /* fr */"?"
            ],
            /* party : Liberal */0,
            /* references : array */[],
            /* details */Content$OurPolitics.test
          ]
        ], Schema$OurPolitics.TopicMap[/* empty */0]));

function PolicyComparisonIndex(Props) {
  Props.year;
  var match = React.useReducer((function (state, action) {
          if (action) {
            return /* record */[
                    /* visible */true,
                    /* policy */action[0]
                  ];
          } else {
            return /* record */[
                    /* visible */false,
                    /* policy */state[/* policy */1]
                  ];
          }
        }), /* record */[
        /* visible */false,
        /* policy */undefined
      ]);
  var modalState = match[0];
  ReactModal.setAppElement("#page-root");
  var match$1 = modalState[/* policy */1];
  return React.createElement(PolicyModalDispatch$OurPolitics.make, PolicyModalDispatch$OurPolitics.makeProps(match[1], null, /* () */0), match$1 !== undefined ? React.createElement(PolicyModal$OurPolitics.make, {
                    policy: match$1,
                    isOpen: modalState[/* visible */0]
                  }) : null, React.createElement(PolicyTable$OurPolitics.make, {
                  data: map
                }), React.createElement("footer", undefined, React.createElement("p", {
                      className: "footerInfo"
                    })));
}

var make = PolicyComparisonIndex;

exports.map = map;
exports.make = make;
/* map Not a pure module */
