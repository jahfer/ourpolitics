// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Strings$OurPolitics = require("./Strings.bs.js");
var PolicyPoint$OurPolitics = require("./PolicyPoint.bs.js");
var LanguageContext$OurPolitics = require("./LanguageContext.bs.js");

function PolicyCell(Props) {
  var party = Props.party;
  var policies = Props.policies;
  var language = React.useContext(LanguageContext$OurPolitics.ctx);
  var t = Curry._1(Strings$OurPolitics.$$Text[/* react_string */2], language);
  var t_party = Curry._1(Strings$OurPolitics.Party[/* react_string */2], language);
  var listItems = policies !== undefined ? $$Array.map((function (policy) {
            return React.createElement(PolicyPoint$OurPolitics.make, {
                        policy: policy,
                        key: Curry._2(Strings$OurPolitics.Party[/* to_str */1], /* EN */0, policy[/* party */3]) + policy[/* title */1][/* en */0]
                      });
          }), policies) : /* array */[React.createElement("li", {
            key: "0",
            className: "emptyPolicy"
          }, Curry._1(t, Strings$OurPolitics.no_policy_listed))];
  return React.createElement("div", {
              className: "policyCell"
            }, React.createElement("h4", {
                  className: "policyCell--party textColor--NDP"
                }, Curry._1(t_party, party)), React.createElement("ul", {
                  className: "policyCell--points"
                }, listItems));
}

var make = PolicyCell;

exports.make = make;
/* react Not a pure module */
